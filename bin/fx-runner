#!/usr/bin/env node

var VERSION = require("../package.json").version;
var { program } = require("commander");
var run = require("../lib/run");

program
  .version(VERSION)

program
  .command("start")
  .description("Start Firefox")
  .option("-b, --binary <path>", "Path of Firefox binary to use.")
  .option("--binary-args <CMDARGS>", "Pass additional arguments into Firefox.")
  .option("-p, --profile <path>", "Path or name of Firefox profile to use.")
  .option("-v, --verbose", "More verbose logging to stdout.")
  .option("--new-instance", "Use a new instance")
  .option("--no-remote", "Do not allow remote calls")
  .option("--foreground", "Bring Firefox to the foreground")
  .option("-l, --listen <port>", "Start the debugger server on a specific port.", parseInt)
  .action(function(options) {
    const parsedOptions = {
      binary: options.binary || process.env.JPM_FIREFOX_BINARY || "firefox",
      profile: options.profile,
      "new-instance": !!options.newInstance ? true : false,
      "foreground": !!options.foreground ? true : false,
      "no-remote": !options.remote ? true : false,
      "binary-args": options.binaryArgs || "",
      "listen": options.listen || 6000
    };

    if (process.env.TESTING_FX_RUNNER) {
      console.log(JSON.stringify(parsedOptions));
    }

    run(parsedOptions)
    .then(function(results) {
      var firefox = results.process;
      if (program.verbose) {
        firefox.stdout.pipe(process.stdout)
      }
    }, console.exception);
  });

program.parse();
